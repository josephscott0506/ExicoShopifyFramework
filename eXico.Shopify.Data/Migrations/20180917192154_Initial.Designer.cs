// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace Exico.Shopify.Data.Migrations
{
    [DbContext(typeof(ExicoShopifyDbContext))]
    [Migration("20180917192154_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);



            modelBuilder.Entity("Exico.Shopify.Data.Domain.DBModels.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("DoPopUp");

                    b.Property<bool>("HighPriority");

                    b.Property<bool>("IsPermanent");

                    b.Property<string>("MessageBody")
                        .IsRequired();

                    b.Property<DateTime?>("PublishedOn");

                    b.Property<string>("Subject")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Exico.Shopify.Data.Domain.DBModels.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("DisplayOrder");

                    b.Property<string>("Footer");

                    b.Property<bool>("IsDev");

                    b.Property<bool>("IsPopular");

                    b.Property<bool>("IsTest");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<decimal>("Price");

                    b.Property<short>("TrialDays");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Exico.Shopify.Data.Domain.DBModels.PlanDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("OptionName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("OptionValue")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("PlanId");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("PlanDefinitions");
                });

            modelBuilder.Entity("Exico.Shopify.Data.Domain.DBModels.SystemSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultValue");

                    b.Property<string>("Description");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("GroupName")
                        .IsRequired();

                    b.Property<string>("SettingName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("Exico.Shopify.Data.Domain.DBModels.UserInbox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MessageId");

                    b.Property<DateTime?>("ReadOn");

                    b.Property<bool>("Sticky");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("UserId");

                    b.ToTable("UserInboxes");
                });

            modelBuilder.Entity("Exico.Shopify.Data.Domain.DBModels.PlanDefinition", b =>
                {
                    b.HasOne("Exico.Shopify.Data.Domain.DBModels.Plan", "Plan")
                        .WithMany("PlanDefinitions")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Exico.Shopify.Data.Domain.DBModels.UserInbox", b =>
                {
                    b.HasOne("Exico.Shopify.Data.Domain.DBModels.Message", "Message")
                        .WithMany("UserInboxes")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Exico.Shopify.Data.Domain.DBModels.AspNetUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
